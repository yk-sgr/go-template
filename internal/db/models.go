// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0

package db

import (
	"database/sql/driver"
	"fmt"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type OrganizationMemberRole string

const (
	OrganizationMemberRoleOWNER  OrganizationMemberRole = "OWNER"
	OrganizationMemberRoleADMIN  OrganizationMemberRole = "ADMIN"
	OrganizationMemberRoleMEMBER OrganizationMemberRole = "MEMBER"
)

func (e *OrganizationMemberRole) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = OrganizationMemberRole(s)
	case string:
		*e = OrganizationMemberRole(s)
	default:
		return fmt.Errorf("unsupported scan type for OrganizationMemberRole: %T", src)
	}
	return nil
}

type NullOrganizationMemberRole struct {
	OrganizationMemberRole OrganizationMemberRole
	Valid                  bool // Valid is true if OrganizationMemberRole is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullOrganizationMemberRole) Scan(value interface{}) error {
	if value == nil {
		ns.OrganizationMemberRole, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.OrganizationMemberRole.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullOrganizationMemberRole) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.OrganizationMemberRole), nil
}

type OrganizationPlan string

const (
	OrganizationPlanFREE       OrganizationPlan = "FREE"
	OrganizationPlanPRO        OrganizationPlan = "PRO"
	OrganizationPlanENTERPRISE OrganizationPlan = "ENTERPRISE"
)

func (e *OrganizationPlan) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = OrganizationPlan(s)
	case string:
		*e = OrganizationPlan(s)
	default:
		return fmt.Errorf("unsupported scan type for OrganizationPlan: %T", src)
	}
	return nil
}

type NullOrganizationPlan struct {
	OrganizationPlan OrganizationPlan
	Valid            bool // Valid is true if OrganizationPlan is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullOrganizationPlan) Scan(value interface{}) error {
	if value == nil {
		ns.OrganizationPlan, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.OrganizationPlan.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullOrganizationPlan) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.OrganizationPlan), nil
}

type Organization struct {
	ID        uuid.UUID
	Name      string
	Plan      OrganizationPlan
	OwnerID   uuid.UUID
	CreatedAt pgtype.Timestamptz
}

type OrganizationMember struct {
	UserID         uuid.UUID
	OrganizationID uuid.UUID
	Role           OrganizationMemberRole
	CreatedAt      pgtype.Timestamptz
}

type SchemaMigration struct {
	Version string
}

type User struct {
	ID         uuid.UUID
	Name       string
	Email      string
	Password   string
	Verified   bool
	LastSeenAt pgtype.Timestamptz
	CreatedAt  pgtype.Timestamptz
}
